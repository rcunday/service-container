name: Seed Database
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DATABASE_NAME: testing
  DATABASE_USER: testing
  DATABASE_PASS: testing
  DATABASE_PORT: 5432

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    services:
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_USER: ${{ env.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ env.DATABASE_PASS }}
          POSTGRES_DB: ${{ env.DATABASE_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
      - name: Seed the database
        run: python seeddb.py
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: ${{ env.DATABASE_NAME }}
          DATABASE_USER: ${{ env.DATABASE_USER }}
          DATABASE_PASS: ${{ env.DATABASE_PASS }}
          DATABASE_PORT: ${{ env.DATABASE_PORT }}